package com.tinnova.veiculos.api.controllers;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.tinnova.veiculos.api.controllers.model.assembler.VeiculoInputDisassembler;
import com.tinnova.veiculos.api.controllers.model.assembler.VeiculosOuputAssembler;
import com.tinnova.veiculos.api.controllers.model.input.VeiculoInput;
import com.tinnova.veiculos.api.controllers.model.output.VeiculoOutput;
import com.tinnova.veiculos.domain.model.Veiculo;
import com.tinnova.veiculos.domain.service.CadastroVeiculoService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/veiculos")
@RequiredArgsConstructor
public class VeiculosController {
	
	private final CadastroVeiculoService service;
	private final VeiculoInputDisassembler disassembler;
	private final VeiculosOuputAssembler assembler;
	
	@GetMapping("/${veiculoId}")
	public VeiculoOutput buscar(@PathVariable Long veiculoId) {
		return this.assembler.toOutput(this.service.buscarOuFalhar(veiculoId));
	}
	
	public List<VeiculoOutput>  pesquisar() {
		return null;
	}
	
	@GetMapping
	public List<VeiculoOutput> listar() {
		return this.assembler.toCollectionOuput(this.service.listarVeiculos());
	}
	
	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	public VeiculoOutput adicionar(@RequestBody VeiculoInput input) {
		Veiculo veiculoAdicionado = this.service.salvar(this.disassembler.toDomainObject(input));
		
		return this.assembler.toOutput(veiculoAdicionado);
	}
	
	@PutMapping("/${veiculoId}")
	public VeiculoOutput atualizar(@PathVariable Long veiculoId, @RequestBody VeiculoInput input) {
		Veiculo veiculoAtual = this.service.buscarOuFalhar(veiculoId);
		this.disassembler.copyToDomainObject(input, veiculoAtual);
		
		return this.assembler.toOutput(this.service.salvar(veiculoAtual));
	}
	
	public VeiculoOutput atualizarParcial(Long veiculoId) {
		return null;
	}
	
	@DeleteMapping
	@ResponseStatus(code = HttpStatus.NO_CONTENT)
	public void excluir(@PathVariable Long veiculoId) {
		this.service.excluir(veiculoId);
	}
}
